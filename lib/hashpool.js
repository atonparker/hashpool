// Generated by CoffeeScript 1.6.3
(function() {
  var BitterSet, HashPool;

  BitterSet = require('bitterset');

  module.exports = HashPool = (function() {
    var defaults;

    defaults = {
      bits: 24,
      base: 16
    };

    function HashPool(options) {
      if (options == null) {
        options = defaults;
      }
      if (options.bits == null) {
        options.bits = defaults.bits;
      }
      if (options.base == null) {
        options.base = defaults.base;
      }
      if (options.base > 36) {
        options.base = 36;
      }
      if (options.base < 2) {
        options.base = 2;
      }
      this.base = options.base;
      this.bits = options.bits;
      this.size = 1 << options.bits;
      this.digits = Math.ceil(Math.log(this.size) / Math.log(options.base));
      this.pool = new BitterSet;
    }

    HashPool.prototype.take = function() {
      var index, offset, result;
      index = offset = Math.floor(Math.random() * this.size) % this.size;
      if (this.pool.get(index)) {
        index = this.pool.next(false, offset);
        if (!((-1 < index && index < this.size))) {
          index = this.pool.previous(false, offset);
        }
        if (!((-1 < index && index < this.size))) {
          throw new Error('The hashpool is empty.');
        }
      }
      this.pool.set(index);
      result = index.toString(this.base);
      while (!(result.length >= this.digits)) {
        result = '0' + result;
      }
      return result;
    };

    HashPool.prototype.taken = function(hash) {
      var index;
      index = parseInt(hash, this.base);
      return this.pool.get(index);
    };

    HashPool.prototype.free = function(hash) {
      var index;
      index = parseInt(hash, this.base);
      this.pool.clear(index);
    };

    return HashPool;

  })();

}).call(this);
